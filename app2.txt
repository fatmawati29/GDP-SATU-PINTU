Untuk membuat sistem rekomendasi materi berdasarkan **latihan soal tentang Pendapatan Nasional** yang terdiri dari 10 soal, dan menggunakan **Content-Based Filtering** dengan algoritma **K-Nearest Neighbors (K-NN)**, berikut adalah **alur langkah-langkah** yang bisa diikuti:

### **Alur Sistem Rekomendasi Materi:**

### 1. **Persiapan Data**
   - **Data Soal**: Siapkan data soal latihan terkait dengan materi Pendapatan Nasional. Setiap soal akan memiliki fitur atau atribut yang relevan, seperti:
     - Topik (misalnya: "Pendapatan Nasional", "PDB", "Konsumsi", dll.)
     - Jenis soal (misalnya: Pilihan Ganda, Isian, dll.)
     - Tingkat Kesulitan (misalnya: Mudah, Sedang, Sulit)
   
   - **Data Jawaban Siswa**: Kumpulkan data dari hasil latihan siswa, misalnya soal mana yang dijawab benar dan mana yang salah.

   - **Data Materi**: Siapkan data materi atau konsep terkait Pendapatan Nasional yang dapat digunakan untuk rekomendasi. Setiap materi bisa memiliki atribut seperti:
     - Topik (misalnya: "PDB", "Metode Perhitungan Pendapatan Nasional", "Kebijakan Fiskal", dll.)
     - Tingkat Kesulitan (misalnya: Mudah, Sedang, Sulit)

### 2. **Vektorisasi Soal dan Materi**
   - **Representasi Fitur Soal**: Gunakan teknik **TF-IDF** atau **One-Hot Encoding** untuk merepresentasikan soal dalam bentuk numerik berdasarkan kata kunci yang relevan dengan topik Pendapatan Nasional.
     - Misalnya, soal tentang "Apa itu PDB?" akan memiliki fitur dengan kata kunci "PDB", "Pendapatan Nasional", "Produksi", dll.

   - **Representasi Fitur Materi**: Lakukan hal yang sama untuk materi yang akan direkomendasikan. Misalnya, materi tentang "Metode Perhitungan Pendapatan Nasional" akan memiliki fitur "Metode", "Pendapatan Nasional", dll.

### 3. **Data Pengguna: Hasil Jawaban**
   - Setiap siswa akan memberikan jawaban untuk soal-soal tersebut (benar atau salah).
   - Jika siswa salah pada soal tertentu, ini berarti mereka perlu mempelajari lebih lanjut materi yang terkait dengan soal tersebut.
   - Buat **vektor jawaban siswa** berdasarkan hasil jawaban (misalnya, benar atau salah untuk setiap soal).

### 4. **Membangun Model K-NN**
   - **Menghitung Kemiripan**: Gunakan **K-NN** untuk menghitung kemiripan antara soal yang dijawab salah oleh siswa dan materi yang ada.
     - Misalnya, jika siswa salah pada soal tentang **PDB**, sistem akan mencari materi yang memiliki kemiripan dengan soal tersebut.
   
   - **Cosine Similarity atau Euclidean Distance**: Gunakan metrik jarak untuk mengukur kesamaan antara soal yang salah dan materi yang tersedia. 
     - **Cosine Similarity** biasanya digunakan untuk menghitung kesamaan antara vektor soal dan materi.

### 5. **Rekomendasi Materi**
   - Berdasarkan hasil K-NN, sistem akan mencari materi yang relevan dengan soal yang salah.
   - Misalnya, jika siswa salah pada soal yang berkaitan dengan **PDB**, sistem akan mencari materi yang membahas tentang **PDB** dan merekomendasikan materi tersebut.
   - Jika ada beberapa materi yang relevan, sistem akan memberikan rekomendasi dengan kemiripan tertinggi (misalnya, top 3 materi).

### 6. **Menampilkan Rekomendasi ke Siswa**
   - Setelah sistem menghitung materi yang paling relevan dengan kesalahan siswa, tampilkan rekomendasi materi tersebut kepada siswa.
   - **Rekomendasi Materi**: Misalnya, jika soal yang salah adalah tentang **PDB**, materi yang akan direkomendasikan adalah "Metode Perhitungan PDB", "Pengertian PDB", dll.

### **Contoh Kasus:**
Misalkan ada 10 soal latihan mengenai Pendapatan Nasional, dengan topik yang berbeda-beda (PDB, Pengeluaran Pemerintah, Konsumsi, dll.):

1. **Soal 1**: Apa itu PDB?
2. **Soal 2**: Bagaimana cara menghitung PDB berdasarkan pengeluaran?
3. **Soal 3**: Apa yang dimaksud dengan Pendapatan Nasional?
3. ...
   
Jika seorang siswa **salah pada soal 1** (tentang PDB), sistem akan mencari materi yang relevan dengan topik PDB dan merekomendasikan materi tentang "Definisi PDB", "Cara Menghitung PDB", dan topik lainnya yang berkaitan dengan PDB.

### **Alur Sistem** Secara Sederhana:
1. **Input**: Data soal (topik dan jenis), data jawaban siswa (benar/salah).
2. **Vektorisasi Soal dan Materi**: Representasikan soal dan materi dalam bentuk numerik menggunakan teknik seperti TF-IDF.
3. **Model K-NN**: Hitung kemiripan antara soal yang salah dan materi menggunakan K-NN dan metrik jarak (Cosine Similarity atau Euclidean Distance).
4. **Rekomendasi Materi**: Sistem memberi rekomendasi materi yang relevan dengan soal yang salah.
5. **Output**: Tampilkan materi yang perlu dipelajari oleh siswa berdasarkan hasil K-NN.

### **Tahapan Teknikal:**
1. **Data Preprocessing**: 
   - Preprocessing data soal dan materi (normalisasi, stemming, stopword removal).
2. **Membangun Representasi Fitur**: 
   - Gunakan TF-IDF untuk membuat representasi numerik soal dan materi.
3. **Membangun Model K-NN**: 
   - Gunakan algoritma K-NN untuk menemukan materi yang paling mirip dengan soal yang salah.
4. **Rekomendasi dan Evaluasi**: 
   - Evaluasi hasil rekomendasi dan sesuaikan model berdasarkan feedback siswa.

### **Penerapan Sistem dalam Website:**
Jika kamu membangun website untuk latihan soal ekonomi (misalnya, pendapatan nasional), sistem ini bisa memberikan rekomendasi materi secara otomatis setelah siswa menyelesaikan latihan soal, berdasarkan soal yang mereka jawab salah.









Untuk menggunakan **TF-IDF (Term Frequency-Inverse Document Frequency)** dalam membuat representasi numerik soal dan materi, kamu perlu melalui beberapa langkah. TF-IDF membantu menghitung seberapa penting suatu kata (dalam hal ini, kata kunci dalam soal atau materi) dalam dokumen tertentu (misalnya, soal atau materi), dengan memperhitungkan frekuensinya di dokumen tersebut dan di seluruh koleksi dokumen.

Berikut adalah langkah-langkah untuk menggunakan TF-IDF untuk merepresentasikan soal dan materi dalam sistem rekomendasi:

### **Langkah 1: Persiapan Data**
Siapkan data soal dan materi yang akan digunakan dalam model. Sebagai contoh:

- **Soal 1**: "Apa itu PDB dalam pendapatan nasional?"
- **Soal 2**: "Bagaimana cara menghitung PDB?"
- **Materi 1**: "Pendapatan Nasional adalah total pendapatan yang diperoleh dalam suatu negara, termasuk PDB."
- **Materi 2**: "PDB dihitung berdasarkan berbagai pendekatan, seperti pengeluaran dan produksi."

### **Langkah 2: Import Library yang Diperlukan**
Pakai **`sklearn.feature_extraction.text`** untuk menghitung TF-IDF. Berikut adalah kode untuk mengimpor library yang dibutuhkan:

```python
from sklearn.feature_extraction.text import TfidfVectorizer
```

### **Langkah 3: Menggabungkan Soal dan Materi**
Gabungkan semua soal dan materi dalam satu daftar atau array. Misalnya:

```python
soal = [
    "Apa itu PDB dalam pendapatan nasional?",
    "Bagaimana cara menghitung PDB?"
]

materi = [
    "Pendapatan Nasional adalah total pendapatan yang diperoleh dalam suatu negara, termasuk PDB.",
    "PDB dihitung berdasarkan berbagai pendekatan, seperti pengeluaran dan produksi."
]

# Gabungkan soal dan materi
data = soal + materi
```

### **Langkah 4: Menghitung TF-IDF**
Gunakan **`TfidfVectorizer`** untuk menghitung representasi TF-IDF dari soal dan materi yang telah digabungkan. 

```python
# Inisialisasi TF-IDF Vectorizer
vectorizer = TfidfVectorizer()

# Fit dan transformasi data
tfidf_matrix = vectorizer.fit_transform(data)

# Hasil TF-IDF dalam bentuk array
tfidf_array = tfidf_matrix.toarray()

# Mendapatkan nama fitur (kata-kata yang ada)
feature_names = vectorizer.get_feature_names_out()

# Menampilkan hasil
print("TF-IDF Matrix:\n", tfidf_array)
print("\nFeature Names (kata-kata):\n", feature_names)
```

### **Langkah 5: Memahami Hasil TF-IDF**
- **TF-IDF Matrix**: Matriks ini berisi nilai TF-IDF untuk setiap kata di dalam dokumen (soal atau materi). Setiap baris mewakili satu dokumen, dan setiap kolom mewakili kata-kata unik yang muncul dalam seluruh dataset (soal dan materi).
- **Feature Names**: Ini adalah kata-kata yang digunakan untuk membentuk fitur dalam representasi numerik soal dan materi.

### **Contoh Hasil Output:**
Misalkan hasil TF-IDF untuk dua soal dan dua materi adalah seperti berikut:

```python
TF-IDF Matrix:
 [[0.70710678 0.70710678 0.         0.         0.         0.        ]
  [0.         0.         0.70710678 0.70710678 0.         0.        ]
  [0.57735027 0.57735027 0.57735027 0.         0.57735027 0.57735027]
  [0.57735027 0.57735027 0.57735027 0.         0.57735027 0.57735027]]

Feature Names (kata-kata):
 ['adalah' 'dihitung' 'pengeluaran' 'produksi' 'pendapatan' 'pdb']
```

### **Langkah 6: Menghitung Kemiripan Antar Soal dan Materi**
Setelah mendapatkan representasi numerik menggunakan TF-IDF, kita bisa menghitung **kemiripan** antara soal dan materi menggunakan **Cosine Similarity**. Cosine similarity mengukur seberapa mirip dua vektor berdasarkan sudut di antara keduanya (semakin kecil sudut, semakin mirip).

```python
from sklearn.metrics.pairwise import cosine_similarity

# Menghitung cosine similarity antara soal dan materi
cosine_sim = cosine_similarity(tfidf_array[:len(soal)], tfidf_array[len(soal):])

# Menampilkan hasil similarity
print("Cosine Similarity antara soal dan materi:\n", cosine_sim)
```

### **Langkah 7: Menggunakan Hasil Cosine Similarity untuk Rekomendasi**
Setelah menghitung **Cosine Similarity**, kamu bisa menggunakan nilai-nilai tersebut untuk memberikan rekomendasi materi yang paling relevan. Misalnya, jika nilai cosine similarity antara soal 1 dan materi 2 lebih tinggi, berarti materi 2 lebih relevan untuk soal 1.

### **Kesimpulan**
Dengan menggunakan **TF-IDF**, kamu dapat:
- Mewakili soal dan materi dalam bentuk vektor numerik.
- Menghitung kemiripan antara soal yang dijawab salah dan materi untuk memberikan rekomendasi yang tepat.
  
Secara keseluruhan, menggunakan TF-IDF memungkinkan kamu untuk:
1. Menganalisis kata-kata yang paling penting dalam soal dan materi.
2. Menyajikan soal dan materi dalam bentuk yang bisa dianalisis menggunakan algoritma lain seperti **K-NN** atau **Cosine Similarity**.

Ini adalah langkah-langkah dasar yang dapat kamu ikuti untuk menerapkan **TF-IDF** dalam sistem rekomendasi materi berbasis soal latihan.





**TF-IDF** (Term Frequency - Inverse Document Frequency) adalah sebuah metode yang digunakan untuk mengukur seberapa penting sebuah kata dalam sebuah dokumen atau sekumpulan dokumen (corpus). Metode ini sangat berguna dalam pemrosesan teks dan pencarian informasi, seperti dalam mesin pencari, analisis teks, dan sistem rekomendasi.

**Konsep Utama TF-IDF**:
1. **Term Frequency (TF)**: Mengukur seberapa sering sebuah kata muncul dalam sebuah dokumen. Semakin sering sebuah kata muncul, semakin tinggi nilai TF-nya.
   
   Rumus TF untuk suatu kata \( t \) dalam dokumen \( d \) adalah:
   \[
   TF(t, d) = \frac{\text{Jumlah kemunculan kata t dalam dokumen d}}{\text{Jumlah total kata dalam dokumen d}}
   \]
   
   Contoh: Misalnya, dalam dokumen "Pendapatan nasional meningkat," kata "pendapatan" muncul sekali dan dokumen ini mengandung 3 kata total. Maka, TF untuk kata "pendapatan" adalah \( \frac{1}{3} \).

2. **Inverse Document Frequency (IDF)**: Mengukur seberapa penting kata tersebut di seluruh dokumen. Kata-kata yang sering muncul di banyak dokumen memiliki nilai IDF yang rendah, sedangkan kata-kata yang jarang muncul di dokumen lainnya akan memiliki nilai IDF yang lebih tinggi.
   
   Rumus IDF untuk sebuah kata \( t \) adalah:
   \[
   IDF(t) = \log\left(\frac{\text{Jumlah total dokumen}}{\text{Jumlah dokumen yang mengandung kata t}}\right)
   \]
   
   Contoh: Misalkan ada 10 dokumen, dan kata "pendapatan" muncul di 3 dokumen. Maka, IDF untuk kata "pendapatan" adalah \( \log\left(\frac{10}{3}\right) \approx 0.522 \).

3. **TF-IDF**: Merupakan hasil perkalian antara TF dan IDF. Semakin sering sebuah kata muncul dalam dokumen tertentu (TF tinggi), dan semakin jarang kata tersebut muncul di seluruh dokumen (IDF tinggi), maka nilai TF-IDF akan tinggi, yang menandakan kata tersebut sangat penting dalam dokumen tersebut.

   Rumus TF-IDF:
   \[
   \text{TF-IDF}(t, d) = TF(t, d) \times IDF(t)
   \]

   Contoh: Jika TF untuk kata "pendapatan" adalah 0.33 dan IDF untuk kata tersebut adalah 0.522, maka:
   \[
   \text{TF-IDF}(pendapatan) = 0.33 \times 0.522 \approx 0.172
   \]

### **Mengapa TF-IDF Penting?**
- **Menentukan Kepentingan Kata**: Kata-kata yang memiliki TF-IDF tinggi dianggap lebih penting dalam dokumen tersebut, karena kata tersebut sering muncul dalam dokumen dan jarang muncul di dokumen lain.
- **Penggunaan dalam Pencarian dan Rekomendasi**: Misalnya, ketika seseorang mencari kata kunci dalam mesin pencari, mesin pencari akan menggunakan TF-IDF untuk memberikan hasil yang relevan berdasarkan pentingnya kata dalam halaman yang ditemukan.

### **Contoh Praktis:**
Misalkan kita memiliki 3 dokumen:
1. **Dokumen 1**: "Pendapatan Nasional sangat penting dalam ekonomi."
2. **Dokumen 2**: "PDB adalah bagian dari Pendapatan Nasional."
3. **Dokumen 3**: "Kebijakan fiskal mempengaruhi Pendapatan Nasional."

- Kata "Pendapatan" akan memiliki TF tinggi dalam ketiga dokumen, karena sering muncul di setiap dokumen. Namun, kata ini akan memiliki **IDF rendah** karena muncul di banyak dokumen.
- Sebaliknya, kata "fiskal" mungkin hanya muncul di satu dokumen (Dokumen 3), sehingga **IDF-nya tinggi** karena kata ini jarang muncul di dokumen lainnya.

Setelah dihitung, **TF-IDF** akan memberikan nilai yang lebih tinggi untuk kata-kata yang sering muncul di dokumen tetapi jarang muncul di dokumen lain, dan nilai yang lebih rendah untuk kata-kata yang terlalu umum seperti "pendapatan" yang muncul di semua dokumen.

### **Kesimpulan:**
**TF-IDF** adalah metode untuk mengukur pentingnya suatu kata dalam sebuah dokumen dengan mempertimbangkan:
- **Seberapa sering kata tersebut muncul dalam dokumen** (TF).
- **Seberapa jarang kata tersebut muncul di seluruh dokumen** (IDF).

Dengan menggunakan TF-IDF, kita dapat mendapatkan representasi numerik dari kata-kata dalam dokumen yang membantu kita dalam mencari informasi atau merekomendasikan materi yang relevan.





**Fungsi TF-IDF dalam Fitur Rekomendasi Materi Setelah Latihan Soal**

Dalam konteks sistem **rekomendasi materi** setelah latihan soal, **TF-IDF** berfungsi untuk **menganalisis kemiripan antara soal yang dijawab dan materi pembelajaran**. Dengan menggunakan TF-IDF, kita bisa memberikan rekomendasi materi yang paling relevan berdasarkan kesalahan atau kekurangan yang terjadi dalam latihan soal.

Berikut adalah penjelasan lebih lanjut tentang bagaimana **TF-IDF** dapat diterapkan dalam sistem rekomendasi materi setelah latihan soal:

### **Langkah-Langkah Menggunakan TF-IDF untuk Rekomendasi Materi:**

1. **Langkah 1: Persiapkan Soal dan Materi**
   - **Soal**: Setiap soal yang diberikan kepada siswa berisi teks yang spesifik, misalnya soal tentang pendapatan nasional, PDB, atau inflasi.
   - **Materi**: Materi yang relevan dengan topik-topik soal juga berupa teks, seperti penjelasan tentang pendapatan nasional, cara menghitung PDB, dll.

   **Contoh:**
   - **Soal**: "Apa itu PDB dalam pendapatan nasional?"
   - **Materi**: "PDB adalah total pendapatan dari seluruh barang dan jasa yang diproduksi dalam suatu negara."

2. **Langkah 2: Representasi TF-IDF untuk Soal dan Materi**
   Menggunakan **TF-IDF** untuk mengubah soal dan materi menjadi representasi numerik. Dengan cara ini, kita bisa mengukur "kemiripan" antara soal dan materi berdasarkan kata-kata yang ada.

   - Untuk setiap soal, kita akan menghitung **TF** (frekuensi kata dalam soal) dan **IDF** (seberapa jarang kata tersebut muncul di seluruh materi dan soal).
   - Begitu juga dengan materi. Setiap materi akan direpresentasikan dalam bentuk **vektor TF-IDF**.

   Hasilnya adalah dua **vektor numerik**: satu untuk soal yang dijawab oleh siswa dan satu lagi untuk setiap materi yang ada.

3. **Langkah 3: Menghitung Kemiripan Soal dengan Materi Menggunakan Cosine Similarity**
   - Setelah soal dan materi direpresentasikan dengan TF-IDF, kita dapat menghitung **cosine similarity** antara soal yang dijawab dan setiap materi. **Cosine similarity** akan memberi nilai seberapa mirip soal dengan materi, di mana nilai 1 berarti sangat mirip dan 0 berarti tidak mirip sama sekali.

   - Cosine similarity dihitung menggunakan rumus:
     \[
     \text{Cosine Similarity}(A, B) = \frac{A \cdot B}{||A|| \times ||B||}
     \]
     di mana \( A \) dan \( B \) adalah vektor TF-IDF untuk soal dan materi.

4. **Langkah 4: Rekomendasi Materi Berdasarkan Kemiripan**
   - Setelah menghitung cosine similarity antara soal yang dijawab siswa dan materi, kita akan mendapatkan nilai yang menunjukkan tingkat relevansi materi dengan soal.
   - **Materi yang memiliki nilai cosine similarity tertinggi** dengan soal yang dijawab salah adalah materi yang paling relevan dan sebaiknya direkomendasikan kepada siswa untuk dipelajari lebih lanjut.

### **Contoh Penerapan:**

Misalkan siswa menjawab soal dengan topik pendapatan nasional dan PDB, tetapi dia salah memahami konsep PDB. Dengan menggunakan TF-IDF, sistem akan:
- Mengubah soal "Apa itu PDB dalam pendapatan nasional?" menjadi representasi numerik.
- Mencocokkan representasi soal ini dengan representasi numerik dari materi yang ada, misalnya materi yang menjelaskan tentang PDB.
- Menghitung kemiripan antara soal dan materi menggunakan cosine similarity.
- Jika materi tentang **PDB** memiliki kemiripan yang tinggi dengan soal tersebut, maka materi ini akan direkomendasikan kepada siswa untuk membantu pemahaman lebih lanjut.

### **Keuntungan Menggunakan TF-IDF dalam Rekomendasi Materi:**

1. **Rekomendasi yang Relevan**: Sistem dapat memberikan materi yang paling sesuai dengan kesalahan yang dibuat oleh siswa dalam latihan soal, meningkatkan peluang siswa untuk memahami topik yang kurang dipahami.
   
2. **Menyesuaikan dengan Konten Soal**: Dengan menggunakan TF-IDF, materi yang direkomendasikan berfokus pada kata-kata kunci dan konsep yang muncul dalam soal yang dijawab siswa, sehingga rekomendasi lebih terfokus pada area yang memang perlu diperbaiki oleh siswa.

3. **Fleksibilitas**: TF-IDF dapat digunakan dalam berbagai jenis materi teks dan soal, serta memungkinkan sistem untuk berkembang dengan menambahkan lebih banyak soal dan materi.

### **Kesimpulan:**
Dengan menggunakan **TF-IDF** dalam sistem rekomendasi materi, kita bisa menganalisis kesalahan siswa dalam latihan soal dan memberikan materi yang lebih relevan sesuai dengan kekurangan pemahaman mereka. TF-IDF memungkinkan kita untuk **menyaring kata-kata kunci dalam soal dan materi** dan menghitung kemiripan antara keduanya, sehingga rekomendasi materi lebih tepat sasaran.